name: golang-postgresql
version: 0.0.2
inherits: wercker/ubuntu12.04-webessentials@1.0.4
type: main
platform: ubuntu@12.04
description: A box for development with postgres and Go 1.4
keywords:
        - golang
        - go
        - postgresql
packages:
        - golang@1.4
        - git
        - mercurial
        - bzr
        - postgresql
env:
  WERCKER_POSTGRESQL_PASSWORD: wercker
  PGPASSWORD: wercker

script: |
        # Setup dev enviroment
        sudo apt-get update
        sudo apt-get install python-software-properties 
        sudo apt-get install software-properties-common
        echo "deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" | sudo tee -a /etc/apt/sources.list.d/pgdg.list
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo add-apt-repository ppa:ansible/ansible -y
        sudo apt-get update
        sudo apt-get install ansible
        
        wget https://storage.googleapis.com/golang/go1.4.1.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.4.1.linux-amd64.tar.gz
        echo "export PATH:$PATH:/usr/local/go/bin" | sudo tee -a /etc/profile
        rm go1.4.1.linux-amd64.tar.gz

        #Set GOPATH
        export GOPATH=$HOME/go
        echo "export GOPATH=$HOME/go" | sudo tee -a /etc/profile
        sudo ansible-playbook -v provisioning/playbook.yml -i provisioning/inventory.ini -c local

        # Add GOBIN to Path
        export PATH="$PATH:$GOPATH/bin"
        echo 'export PATH="$PATH:$GOPATH/bin"' | sudo tee -a /etc/profile
        echo "PGPASSWORD=wercker" | sudo tee -a /etc/profile

box-detect:
  priority : 900
  version :
  detect:
    - files:
      - .godir
    - files:
      - main.go
    - files:
      - app.go
    - files:
      - server.go
default-build:
  go:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          # Sets the go workspace and places you package
          # at the right place in the workspace tree
          - setup-go-workspace
          # Gets the dependencies
          - script:
              name: go get
              code: |
                cd $WERCKER_SOURCE_DIR
                go version
                go get -t ./...
          # Build the project
          - script:
              name: go build
              code: |
                go build ./...
          # Test the project
          - script:
              name: go test
              code: |
                go test ./...
